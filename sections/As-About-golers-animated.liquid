<style>
    .headx {
        text-align: center;
        padding-top: 85px;
        z-index: 5;
        position: relative;
    }

    .ptext {
        margin: 15px 0;
    }

    .animatedclass {
        background-image: url(https://cdn.shopify.com/s/files/1/0914/1809/9993/files/Original_62001354-White-Pine_1_1.png?v=1732172849);
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
    }

    .mainbx {
        width: 100%;
        height: 2230px;
        position: relative;
    }

    .squiggle {
        position: absolute;
        top: -160px;
        left: 0;
        width: 100%;
        height: auto;
        /* padding-left: 125px; */
        z-index: 0;
    }

    .squiggle-left {
        position: absolute;
        top: 48%;
        left: 0;
        width: 50%;
    }

    .squiggle-right {
        position: absolute;
        top: 52%;
        right: 0;
        width: 50%;
    }
</style>
<style>
    .since-box {
        position: absolute;
        right: 12%;
        width: 135px;
        top: 10%;
    }

    .bicycle-box {
        position: absolute;
        right: calc(50% - 365px);
        top: 3.7%;
    }

    .bicycle-box {
        opacity: 0;
        transform: translateX(100%);
        transition: transform 1s ease-out, opacity 1s ease-out;
    }

    .bicycle-box.animate {
        opacity: 1;
        transform: translateX(0);
    }

    /* Example layout styling */
    .bicycle-box img {
        max-width: 100%;
        display: block;
    }

    .Gopal-locho-home {
        position: absolute;
        left: calc(50% - 480px);
        top: 6.4%;
    }

    .Gopal-locho-home img {
        position: relative;
    }

    .gopal-name {
        position: absolute;
        left: 33%;
        top: 5.5%;
    }

    .gopal-name {
        display: inline-block;
        opacity: 0;
        animation: hideShow 4s ease-in-out infinite;
        animation-delay: 0.5s;
    }

    @keyframes hideShow {

        0%,
        100% {
            opacity: 0;
        }

        50% {
            opacity: 1;
        }
    }

    .brand-box {
        position: absolute;
        top: 17%;
        left: 12%;
        width: 500px;
    }

    .brand-box h6,
    .brand_loyalty-box h6,
    .barnd-traditional-box h6,
    .brand-loyalty-box h6,
    .barnd-locho-box h6 {
        color: #000;
        font-size: 22px;
        font-style: normal;
        font-weight: 700;
        line-height: normal;
    }

    .brand-box p,
    .brand_loyalty-box p,
    .barnd-traditional-box p,
    .brand-loyalty-box p,
    .barnd-locho-box p,
    .since-box p {
        opacity: 0.6;
    }

    .brand-man {
        position: absolute;
        right: calc(50% - 220px);
        top: 19%;
    }

    .brand-man {
        display: inline-block;
        animation: wave 5s ease-in-out infinite;
    }

    @keyframes wave {
        0% {
            transform: translateX(0);
        }

        50% {
            transform: translateX(20px);
        }

        100% {
            transform: translateX(0);
        }
    }

    .brand_loyalty-box {
        position: absolute;
        top: 35%;
        right: 10%;
        width: 590px;
        text-align: right;
    }

    .iconitem-box {
        position: absolute;
        top: 40.5%;
        right: calc(50% - 540px);
    }

    .truck-box {
        position: absolute;
        top: 46.2%;
        left: 0%;
        opacity: 0;
        /* Initially hidden */
        transform: translateX(-100px);
        /* Start slightly to the left */
        transition: opacity 2s ease-in-out, transform 2s ease-in-out;
        /* Smooth transitions */
    }

    .truck-box.animate {
        opacity: 1;
        /* Fully visible */
        transform: translateX(100px);
        /* Move to the original position */
    }

    .cold-coco-box {
        position: absolute;
        top: 61.5%;
        left: 10%;
        width: 15%;
    }

    .cold-coco-box img {
        opacity: 0;
        transform: scale(0.8);
        transition: opacity 1s ease, transform 1s ease;
    }

    .cold-coco-box img.show {
        opacity: 1;
        transform: scale(1);
    }

    .barnd-traditional-box {
        position: absolute;
        top: 64%;
        left: 28%;
        width: 300px;
    }

    .brand-loyalty-box {
        position: absolute;
        top: 75%;
        left: 6%;
        width: 600px;
    }

    .chutney-box {
        position: absolute;
        top: 64%;
        right: 15%;
    }

    .chutney-box img {
        opacity: 0;
        transform: scale(0.6);
        transition: opacity 1.2s ease, transform 1.2s ease;
    }

    .chutney-box img.show {
        opacity: 1;
        transform: scale(1);
    }

    .barnd-locho-box {
        position: absolute;
        top: 75%;
        right: 10%;
        text-align: right;
        width: 250px;
    }

    .Gopal-logo-box {
        position: absolute;
        top: 88%;
        left: 49%;
    }

    .Gopal-logo-box img {
        opacity: 0;
        transform: scale(0.6);
        transition: opacity 1.5s ease, transform 1.5s ease;
    }

    .Gopal-logo-box img.show {
        opacity: 1;
        transform: scale(1);
    }
</style>
<style>
    @media screen and (max-width:1366px) {
        .squiggle {
            top: -115px;
        }
        img{
            width: 100%;
        }
        .bicycle-box {
    position: absolute;
    right: calc(50% - 330px);
    top: 3.7%;
}
</style>


<section class="animatedclass">
    <div class="container">
        <div class="headx">
            <p class="h1">{{section.settings.heading_txt}}</p>
            <p class="ptext">{{section.settings.heading_sub_txt}}</p>
            <a class="button button--xl button--outline" href="#">{{section.settings.btn_txt}}</a>
        </div>

        <div class="mainbx">       
            <svg width="1440" height="2436" viewBox="0 0 1440 2436" fill="none" xmlns="http://www.w3.org/2000/svg"
                class="squiggle">
                <path id="svgPath"
                    d="M1478.7 70H1345.74C1320.89 70 1300.74 90.1472 1300.74 115V453.35C1300.74 478.203 1280.59 498.35 1255.74 498.35H167C142.147 498.35 122 518.497 122 543.35V842.04C122 866.893 142.147 887.04 167 887.04H950.13C974.983 887.04 995.13 866.893 995.13 842.04V665.96C995.13 641.107 1015.28 620.96 1040.13 620.96H1267.87C1292.72 620.96 1312.87 641.107 1312.87 665.96V1505.06C1312.87 1529.91 1292.72 1550.06 1267.87 1550.06H1043.26C1018.41 1550.06 998.26 1570.21 998.26 1595.06V1735.78C998.26 1760.63 1018.41 1780.78 1043.26 1780.78H1321.09C1345.94 1780.78 1366.09 1800.93 1366.09 1825.78V2003.43C1366.09 2028.28 1345.94 2048.43 1321.09 2048.43H999.43C974.577 2048.43 954.43 2068.58 954.43 2093.43V2302"
                    stroke="url(#paint0_linear_406_14)" stroke-width="2" stroke-miterlimit="10" />
                <defs>
                    <linearGradient id="paint0_linear_406_14" x1="800.35" y1="70" x2="800.35" y2="2302"
                        gradientUnits="userSpaceOnUse">
                        <stop offset="0.811749" stop-color="#60241A" />
                        <stop offset="0.989937" stop-color="white" />
                    </linearGradient>
                </defs>
            </svg>


            <svg xmlns="http://www.w3.org/2000/svg" width="857" height="1018" viewBox="0 0 857 1018" fill="none"
                class="squiggle-left">
                <path
                    d="M-5 1H539.174C565.775 1 587.365 25.3709 587.365 55.3994V171.161C587.365 201.19 565.775 225.561 539.174 225.561H159.043C132.441 225.561 110.851 249.931 110.851 279.96V484.284C110.851 514.312 132.441 538.683 159.043 538.683H807.695C834.296 538.683 855.886 563.054 855.886 593.083V1017.5"
                    stroke="url(#paint0_linear_1_2165)" stroke-width="2" stroke-miterlimit="10" />
                <defs>
                    <linearGradient id="paint0_linear_1_2165" x1="425.443" y1="1" x2="425.443" y2="1017.5"
                        gradientUnits="userSpaceOnUse">
                        <stop offset="0.648244" stop-color="#60241A" />
                        <stop offset="1" stop-color="white" />
                    </linearGradient>
                </defs>
            </svg>
       
            <div>
                <div class="since-box">
                    <p>{{section.settings.journeytxt-1}}</p>
                </div>
                <div class="bicycle-box">
               
                    <img src="{{ section.settings.img_one | image_url: 'master'}}" width="" height="">

                </div>
                <div>
                    <div class="Gopal-locho-home">
                        <img src="{{ section.settings.img_two | image_url: 'master'}}" width="" height="">
                    </div>
                    <div class="gopal-name">
                        <img src="{{ section.settings.img_three | image_url: 'master'}}" width="" height="">
                    </div>
                </div>

            </div>
            <div>
                <div class="brand-box">
                    <h6>{{section.settings.journeyhead-2}}</h6>
                    <p>{{section.settings.journeytxt-2}}</p>
                </div>
                <div class="brand-man">
                    {% comment %} <video autoplay muted loop playsinline width="640" height="360">
                        <source
                            src="https://cdn.shopify.com/s/files/1/0914/1809/9993/files/Animation_-_1732531864733.gif?v=1732534973"
                            type="video/mp4">
                    </video> {% endcomment %}
                    {% comment %} <img
                        src="https://cdn.shopify.com/s/files/1/0914/1809/9993/files/Animation_-_1732531864733.gif?v=1732534973"
                        alt="" srcset=""> {% endcomment %}
                    <img src="{{ section.settings.img_four | image_url: 'master'}}" width="" height="">
                </div>
            </div>
            <div class="">
                <div class="truck-box">
                    <img src="{{ section.settings.img_five | image_url: 'master'}}" width="" height="">
                </div>
                <div class="brand_loyalty-box">
                    <h6>{{section.settings.journeyhead-3}}</h6>
                    <p>{{section.settings.journeytxt-3}}</p>
                </div>
                <div class="iconitem-box">
                    <img src="{{ section.settings.img_six | image_url: 'master'}}" width="" height="">
                </div>
            </div>

            <div>
                <div class="cold-coco-box">
                    <img src="{{ section.settings.img_seven | image_url: 'master'}}" width="" height="">
                </div>
                <div class="barnd-traditional-box">
                    <h6>{{section.settings.journeyhead-4}}</h6>
                    <p>{{section.settings.journeytxt-4}}</p>
                </div>
            </div>

            <div>
                <div class="brand-loyalty-box">
                    <h6>{{section.settings.journeyhead-5}}</h6>
                    <p>{{section.settings.journeytxt-5}}</p>
                </div>
                <div class="chutney-box">
                    <img src="{{ section.settings.img_Eight | image_url: 'master'}}" width="" height="">
                </div>
                <div class="barnd-locho-box">
                    <h6>{{section.settings.journeyhead-6}}</h6>
                    <p>{{section.settings.journeytxt-6}}</p>
                </div>
            </div>
            <div class="Gopal-logo-box">
                <img src="{{ section.settings.img_logo | image_url: 'master'}}" width="" height="">
            </div>
        </div>
    </div>
</section>
<script>
    const svg = document.getElementById("svgPath");
    const length = svg.getTotalLength();

    // Start positioning of SVG drawing
    svg.style.strokeDasharray = length;
    svg.style.strokeDashoffset = length;

    // Add smooth transition for drawing
    svg.style.transition = "stroke-dashoffset 0.5s ease-out";

    window.addEventListener("scroll", function () {
        const scrollPosition = document.body.scrollTop + document.documentElement.scrollTop;
        const scrollHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;

        // Calculate scroll percentage
        const scrollpercent = scrollPosition / scrollHeight;

        // Adjust to start from center
        const centerPoint = 0.6; // 50% of scroll (center)
        const offsetRange = 0.25; // Range where it starts and ends smoothly (25%)

        let adjustedScroll = 0;
        if (scrollpercent >= centerPoint - offsetRange && scrollpercent <= centerPoint + offsetRange) {
            adjustedScroll =
                (scrollpercent - (centerPoint - offsetRange)) / (2 * offsetRange);
        } else if (scrollpercent > centerPoint + offsetRange) {
            adjustedScroll = 1;
        }

        // Apply offset to the path
        const draw = length * adjustedScroll;
        svg.style.strokeDashoffset = length - draw;
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const svgElement = document.querySelector(".squiggle-left path");
        const length = svgElement.getTotalLength();

        // Initial setup of stroke-dasharray and stroke-dashoffset
        svgElement.style.strokeDasharray = length;
        svgElement.style.strokeDashoffset = length;

        // Add smooth transition
        svgElement.style.transition = "stroke-dashoffset 0.5s ease-out";

        window.addEventListener("scroll", () => {
            const scrollPosition = document.body.scrollTop + document.documentElement.scrollTop;
            const scrollHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;

            // Calculate scroll percentage
            const scrollPercent = scrollPosition / scrollHeight;

            // Adjust animation around center point
            const centerPoint = 0.6; // 40% of scroll height
            const offsetRange = 0.25; // 25% range for smooth animation
            let adjustedScroll = 0;

            if (scrollPercent >= centerPoint - offsetRange && scrollPercent <= centerPoint + offsetRange) {
                adjustedScroll =
                    (scrollPercent - (centerPoint - offsetRange)) / (2 * offsetRange);
            } else if (scrollPercent > centerPoint + offsetRange) {
                adjustedScroll = 1;
            }

            // Update stroke-dashoffset for animation
            const draw = length * adjustedScroll;
            svgElement.style.strokeDashoffset = length - draw;
        });
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const truckBox = document.querySelector(".truck-box");

        const observer = new IntersectionObserver((entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    truckBox.classList.add("animate"); // Trigger animation
                }
            });
        }, {
            root: null, // Use the viewport as the root
            threshold: 0.5 // Element is visible when 50% of it is in the viewport
        });

        observer.observe(truckBox);
    });
    document.addEventListener("DOMContentLoaded", () => {
        const bicycleBox = document.querySelector(".bicycle-box");

        const observer = new IntersectionObserver((entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    bicycleBox.classList.add("animate"); // Trigger the animation
                }
            });
        }, {
            root: null, // Use the viewport as the root
            threshold: 0.5 // Element is visible when 50% of it is in the viewport
        });

        observer.observe(bicycleBox);
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const images = document.querySelectorAll(".cold-coco-box img, .chutney-box img, .Gopal-logo-box img");

        const observer = new IntersectionObserver((entries) => {
            entries.forEach((entry, index) => {
                if (entry.isIntersecting) {
                    setTimeout(() => {
                        entry.target.classList.add("show");
                    }, index * 500); // Stagger animations by 500ms
                    observer.unobserve(entry.target);
                }
            });
        }, {
            root: null,
            threshold: 0.5
        });

        images.forEach((img) => observer.observe(img));
    });
</script>

{% schema %}
{
"name": "Explore Journey",
"settings": [
{
"type": "text",
"id": "heading_txt",
"label": "Enter Heading"
},
{
"type": "text",
"id": "heading_sub_txt",
"label": "Enter SubHeading"
},
{
"type": "text",
"id": "btn_txt",
"label": "Enter Button Name"
},
{
"type": "header",
"content": "journey text"
},
{
"type": "text",
"id": "journeytxt-1",
"label": "Enter pargraph one"
},
{
"type": "text",
"id": "journeyhead-2",
"label": "Enter heading Two"
},
{
"type": "text",
"id": "journeytxt-2",
"label": "Enter pargraph Two"
},
{
"type": "text",
"id": "journeyhead-3",
"label": "Enter heading Three"
},
{
"type": "text",
"id": "journeytxt-3",
"label": "Enter pargraph Three"
},
{
"type": "text",
"id": "journeyhead-4",
"label": "Enter heading Four"
},
{
"type": "text",
"id": "journeytxt-4",
"label": "Enter pargraph Four"
},
{
"type": "text",
"id": "journeyhead-5",
"label": "Enter heading Five"
},
{
"type": "text",
"id": "journeytxt-5",
"label": "Enter pargraph Five"
},
{
"type": "text",
"id": "journeyhead-6",
"label": "Enter heading Six"
},
{
"type": "text",
"id": "journeytxt-6",
"label": "Enter pargraph Six"
},
{
"type": "header",
"content": "journey images"
},
{
"type":"image_picker",
"id": "img_one",
"label": "upload image first"
},
{
"type":"image_picker",
"id": "img_two",
"label": "upload image Two"
},
{
"type":"image_picker",
"id": "img_three",
"label": "upload image three"
},
{
"type":"image_picker",
"id": "img_four",
"label": "upload image four"
},
{
"type":"image_picker",
"id": "img_five",
"label": "upload image five"
},
{
"type":"image_picker",
"id": "img_six",
"label": "upload image six"
},
{
"type":"image_picker",
"id": "img_seven",
"label": "upload image seven"
},
{
"type":"image_picker",
"id": "img_Eight",
"label": "upload image Eight"
},
{
"type":"image_picker",
"id": "img_logo",
"label": "upload Logo"
}
],

"presets": [
{
"name": "AS_Journey_about"
}
]
}
{% endschema %}